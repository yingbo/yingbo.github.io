{"pages":[],"posts":[{"title":"Docker How To Delete Everything","text":"Just want fresh restart and delete all containers? Here is the code: docker stop $(docker ps -a -q) docker rm $(docker ps -a -q) If you want to delete all images too: docker stop $(docker ps -a -q) docker rmi $(docker images -a -q)","link":"/2015/docker-how-to-delete-everything.html"},{"title":"SSH Reverse Tunnel","text":"The SSH has many advance usages. The reverse tunnel is a good example and a very useful one. It answers the question: if a user can ssh from a server A to a server B, can the user ssh back from B to A, even A is behind a router? In my case, it is very helpful. I have a desktop in the office, but the office VPN has not been set up yet. How can I ssh to my office desktop from home? The answer is SSH reverse tunnel, using a server with a public IP as a jumper. Followings show how did I do it. As a start, we need to ssh from the server A (office desktop) to server B (the server with a public IP). It has more parameters than common SSH, to enable reverse tunnel: ssh -R 19999:localhost:22 my_username_on_server_b@serer_b{lang=”bash”} The port 22 is the office desktop ssh server port. The standard is 22, valid for most of cases. The 19999 is going to be used to ssh port on server B. Next I ‘ll show how do I ssh back from the server B to my desktop. It’s pretty simple: ssh -p 19999 my_username_on_server_a@serer_b{lang=”bash”} Note how do we use the port 19999. Another important thing is this time we use my_username_on_server_a. In many cases a user uses a same user name on both servers, however, mine are different. After that I already jump to my office desktop . However, it is possible that the ssh connection from the first step gone. How can I fix it while I am at home? At first I thought I needed a cron job to keep reconnecting, till I found the autossh. The usage is very simple: autossh -M 19990 -f -N -o &quot;PubkeyAuthentication=yes&quot; -o &quot;PasswordAuthentication=no&quot; -R 19999:localhost:22 my_username_on_server_b@serer_b{lang=”bash”} Now I have a stable connection. Unless the office has a power off, I am pretty safe now.","link":"/2015/ssh-reverse-tunnel.html"},{"title":"A Better Feature Branch Naming in Intellij IDEA","text":"Intellij Idea has a very nice feature: you can customize feature branch name. When create a new task, the Intellij IDEA will help you create a new (git) branch. The default name of the branch is the task number, e.g. FOO-1 for Jira, or #1 for gitlab. However, we can make the branch name better by adding the task summary to it. It will be like FOO-1-add-a-new-feature. To configure it, goes to Preferences-&gt;Tools-&gt;Task and change the Feature branch name format to {id}-{summary}","link":"/2016/a-better-feature-branch-naming-in-intellij-idea.html"},{"title":"Generate Random Numbers from Command Line","text":"On mac or bsd, we can use jot. jot -r 1 0 10000 or jot -r 1 0 0x7fffffffffffffffL On linux need to install the package athena-jot: sudo apt-get install athena-jot","link":"/2016/generate-random-numbers-from-command-line.html"},{"title":"Airflow Remove Example Dags","text":"When you start your local airflow based on the official documentation, the airflow will fill the db with a bunch of examples. If you want to remove them, first you need to find the airflow.cfg find under the airflow home directory (usually it is $HOME/airflow) and change the line load_examples = True to load_examples = False. After the change, however, the examples are still in you airflow’s DB. You need to run airflow resetdb to reset the airflow DB. Finally the examples are gone.","link":"/2021/airflow-remove-example-dags.html"},{"title":"Python how to list files under a directgory","text":"There are so many ways, but in python 3 looks the most popular way is using pathlib. Here is an example to list allfiles starting with bar under dir /foo 1[x.absolute() for x in pathlib.Path(&quot;/foo&quot;).glob(&quot;bar*&quot;)]","link":"/2021/python-how-to-list-files-under-a-directgory.html"},{"title":"Rename OneDrive Business Folder Name on MacOS","text":"Onedrive for bussiness forces adding the business name suffix in the sync folder. For example, if your business is “Foo”, the sync folder under your home directory will be like OneDrive - Foo. It will be more anonying if your business name is long and have spaces. The setting from the client doesn’t have an option for renaming the folder. There are “user feedback” to Mircosoft (https://onedrive.uservoice.com/forums/913522-onedrive-on-windows/suggestions/8729746-allow-onedrive-for-business-folder-to-be-renamed) for years but as you seen nothing happened yet. Here is a “hacking” way. Please use it carefully. No garantee it won’t harm your computers, but at least below are what I do on my Mac and works well. Quit OneDrive client. First locate the setting folder. It should be under $HOME/Library/ontainers/com.microsoft.OneDrive-mac/Data/Library/Application Support/OneDrive/settings/Business1/. Looking for a .ini file in the folder. It’s name is a UUID. For example, it looks like a27edc43-553b-4447-82af-857f36d750ef.ini. In the first line you can see your sync folder name there. Change it to any name you’d like. I simply rename it to “OneDrive”. Note just using OneDrive might have a problem if you are using a personal account on this computer too, but it’s not my casse. For safty, run find . -type f|xargs grep Foo (replace Foo by your businese name) to find out any other files haveing the old folder name. Change them too. Dont’ forget change the folder name in your home directory.","link":"/2021/rename-onedrive-business-folder-name-on-macos.html"}],"tags":[{"name":"docker","slug":"docker","link":"/tags/docker/"},{"name":"dev","slug":"dev","link":"/tags/dev/"},{"name":"ssh","slug":"ssh","link":"/tags/ssh/"},{"name":"network","slug":"network","link":"/tags/network/"},{"name":"dev-tools","slug":"dev-tools","link":"/tags/dev-tools/"},{"name":"python","slug":"python","link":"/tags/python/"},{"name":"airflow","slug":"airflow","link":"/tags/airflow/"},{"name":"mac","slug":"mac","link":"/tags/mac/"}],"categories":[{"name":"Dev","slug":"Dev","link":"/categories/Dev/"},{"name":"Network","slug":"Network","link":"/categories/Network/"},{"name":"Python","slug":"Dev/Python","link":"/categories/Dev/Python/"},{"name":"Mac","slug":"Mac","link":"/categories/Mac/"}]}